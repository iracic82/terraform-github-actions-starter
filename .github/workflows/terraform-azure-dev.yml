name: "Terraform Azure Dev - Plan"

on:
  pull_request:
    branches:
      - main
    paths:
      - 'environments/azure-dev/**'
      - 'modules/azure/**'
      - '.github/workflows/terraform-azure-dev.yml'

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    name: 'Terraform Plan - Azure Dev'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: ./environments/azure-dev
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./environments/azure-dev

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./environments/azure-dev

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        working-directory: ./environments/azure-dev
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Azure Dev Environment
            #### Format and Style üñå \`${{ steps.fmt.outcome }}\`
            #### Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
            #### Validation ü§ñ \`${{ steps.validate.outcome }}\`
            #### Plan üìñ \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`environments/azure-dev\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
